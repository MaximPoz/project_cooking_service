import React from "react";
import axios from "axios";
import style from "./style.module.css";
import { useForm } from "react-hook-form";
import { Link, useNavigate } from "react-router-dom";
import toast from "react-hot-toast";
import { jwtDecode } from "jwt-decode";

export const LogIn = ({ updateState }) => {
  axios.defaults.withCredentials = true;
  const navigate = useNavigate();

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();

  const onSubmit = async ({ email, password }) => {
    axios
      .post("http://localhost:5555/users/login", { email, password })
      .then((res) => {
        // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –∫—É–∫–∏
        const getTokenFromCookie = () => {
          const token = document.cookie
            .split(";")
            .find((cookie) => cookie.trim().startsWith("token="));
          if (token) {
            return token.split("=")[1];
          } else {
            return null;
          }
        };

        // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
        const token = getTokenFromCookie();
        localStorage.setItem("token", token);

        updateState(true);
        navigate("/personalAccount");
      })
      .catch((error) => {
        if (error.response.status === 405) {
          //–í–æ –∂–µ—Å—Ç—å —Ç—É—Ç xD
          console.error(error.response.data.message);
          toast(
            (t) => (
              <span>
                –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?¬Ø\_(„ÉÑ)_/¬Ø –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–º! üòÄ
                <button
                  className={style.btn}
                  onClick={() => toast.dismiss(navigate("/changePassword"))}
                >
                  –ñ–º–∏ —Å—é–¥–∞!
                </button>
              </span>
            ),
            { duration: 8000 }
          );
        }
      });
  };

  return (
    <div className={style.container}>
      <h2 className="welcome">–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å</h2>

      <form onSubmit={handleSubmit(onSubmit)}>
        <p className="textClass">–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞</p>
        <input
          className={style.input}
          type="text"
          placeholder="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞"
          {...register("email", { required: true })}
        />
        {errors.email && (
          <span className={style.error}>
            –ü–æ–ª–µ "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞" –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤
            —Ñ–æ—Ä–º–∞—Ç–µ example@example.com
          </span>
        )}

        <p className="textClass">–ü–∞—Ä–æ–ª—å</p>
        <input
          className={style.input}
          type="password"
          placeholder="–ü–∞—Ä–æ–ª—å"
          {...register("password", { required: true, maxLength: 100 })}
        />
        {errors.password && (
          <span className={style.error}>
            –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤
          </span>
        )}

        <input className="Btn" type="submit" value="–û—Ç–ø—Ä–∞–≤–∏—Ç—å" />
      </form>
      <hr />

      <Link to="/changePassword">
        <button className="Btn">–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å</button>
      </Link>
    </div>
  );
};
